{"name":"Playrec-examples","tagline":"Examples of how to use playrec in Matlab/Octave, including some basic functionality that may be useful in other scenarios","body":"# Playrec Example Scripts\r\n\r\nThis repo contains a number of scripts that give examples of how to use Playrec, and provide some basic functionality that may be useful in other scenarios. Scripts include:\r\n\r\n## test_playrec\r\n\r\nChecks if playrec is available and then runs 3 output tests on a selected output device. The first test shows simple blocking output, the second uses simple non-blocking output and the third shows how continuous output can be achieved without needing to precalculate all samples.\r\n\r\n## select_play_device\r\n\r\nDisplays a textual list of all available output devices in the command window, and waits for user input to select. Only a valid device number can be selected.\r\n\r\n## select_rec_device\r\n\r\nDisplays a textual list of all available record devices in the command window, and waits for user input. Only a valid device number can be selected.\r\n\r\n## play_wav\r\n\r\nPlays a mono or stereo wav file using Playrec. The samples are loaded from the file in sections, demonstrating how to create a continuous output without glitches.\r\n\r\n## play_ambi_wav\r\n\r\nPlays a WAVEX Ambisonic Wav file using Playrec. The samples are loaded from the file and converted to the required output in sections, demonstrating how to create a continuous output without glitches. This utilises wavexread.m, a version of wavread modified by Sylvain Choisel to read wave-format-extensible files.\r\n\r\n## spectrum_analyser\r\n\r\nUses Playrec to show a realtime spectrum and waveform, and some of the possibilities that Playrec can be used for.\r\n\r\n## bformat_dec\r\n\r\nDecodes a B-Format signal into speaker feeds, as used by play_ambi_wav.\r\n\r\n## bformat_enc\r\n\r\nEncodes a mono signal into a B-Format signal at a specified azimuth and elevation.\r\n\r\n## bformat_rot_tilt_tumble\r\n\r\nRotates, tilts and tumbles a B-Format signal.\r\n\r\n## loop_back\r\n\r\nDemonstrates simultaneous input and output by looping an input channel onto one or more outputs. By optimising parameters the latency can be reduced, depending on the target platform.","google":"UA-3319302-1","note":"Don't delete this file! It's used internally to help with page regeneration."}